#!/bin/bash

SYS_VERSION_FILE="/etc/version"
VERSION_FILE="/data/etc/version"
POST_UPGRADE_DIR="/usr/share/post-upgrade"


test -n "${OS_VERSION}" || source /etc/init.d/base

hash=$(md5sum ${VERSION_FILE} 2>/dev/null | cut -d ' ' -f 1)
sys_hash=$(md5sum ${SYS_VERSION_FILE} 2>/dev/null | cut -d ' ' -f 1)

test "${hash}" == "${sys_hash}" && exit 0

test -d ${POST_UPGRADE_DIR} || exit 0

function version_gt() {
    if [[ "$1" != "$2" ]] && [[ $(echo -e "$2\n$1" | sort -t . | head -n 1) == "$2" ]]; then
        return 0
    else
        return 1
    fi
}

function run_post_upgrade() {
    unset OS_VERSION
    # ensure compatibility with previous lowercase os_version
    version="$(source ${VERSION_FILE} 2>/dev/null && echo ${OS_VERSION}${os_version})"
    
    sys_version="$(source ${SYS_VERSION_FILE} 2>/dev/null && echo ${OS_VERSION})"

    versions=$(ls -1 ${POST_UPGRADE_DIR} | cut -d '.' -f 1)
    for v in ${versions}; do
        if [[ -z "${version}" ]] || version_gt ${v} ${version}; then
            msg_begin "Post-upgrading to version ${v}"
            out=$(${POST_UPGRADE_DIR}/${v}.sh 2>&1)
            test $? == 0 && msg_done || msg_fail
            echo "${out}" | logger -t post-upgrade
        fi
    done
}

case "$1" in
    start)
        run_post_upgrade
        cp ${SYS_VERSION_FILE} ${VERSION_FILE}
        ;;

    stop)
        true
        ;;

    *)
        echo "Usage: $0 {start}"
        exit 1
esac

exit $?

